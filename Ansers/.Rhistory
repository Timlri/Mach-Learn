N = length(age_at_close),
mean = mean(age_at_close))
# by.BU.se <- aggregate(x, by=list(se_engaged), funtionse_engaged == "Yes")
# d7 - Create bar charts showing weighted impact to MTTR
# compute the overall averages of MTTR - L1, SE and Total
avg.mttr.se <- sum(x$N[x$se_engaged == "Yes"] * x$mean[x$se_engaged == "Yes"]) /
sum(x$N[x$se_engaged == "Yes"])
avg.mttr.l1 <- sum(x$N[x$se_engaged == "No"] * x$mean[x$se_engaged == "No"]) /
sum(x$N[x$se_engaged == "No"])
avg.mttr    <- sum(x$N * x$mean) / sum(x$N)
# Summarize by operational_bu
# add a column representing the impact to MTTR
by.BU$impact    <- by.BU$N * (by.BU$mean - average.mttr)
by.BU$goodbad   <- by.BU$impact > 0
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad))
d7 <- d7 + geom_bar(position=position_dodge(), stat="identity")
d7 <- d7 + guides(fill=FALSE)
d7 <- d7 + geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2))
d7 <- d7 + theme(axis.text.x = element_text(angle=90, colour = "black"))
d7 <- d7 + scale_fill_manual(values=c("lightgreen", "#FF3333"))
d7 <- d7 + geom_hline(yintercept = 0, colour="darkgreen")
d7 <- d7 + xlab("Product") + ylab("Impact to MTTR")
d7 <- d7 + ggtitle("Weighted Impact to Overall MTTR by BU with Number of Issues")
d7 <- d7 + theme(axis.title.y = element_text(size = 10))
d7 <- d7 + theme(axis.text.y = element_blank())
d7 <- d7 + theme(axis.title.x = element_blank())
d7
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("lightgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to Overall MTTR by BU\nImpact=Issues*(BU.mttr-Overall.mttr") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d7
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("lightgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to Overall MTTR by BU\nImpact=Issues*(BU.mttr-Overall.mttr") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d7
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("lightgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to Overall MTTR by BU\nImpact=Issues * (BU.mttr - Overall.mttr") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d7
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("darkgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to Overall MTTR by BU\nImpact=Issues * (BU.mttr - Overall.mttr)") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d7
by.BU
x
by.BU
x.se <- subset(x, se_engaged == "No")
x.se
str(x)
x.se <- x[se_engaged == "Yes",]
x.se <- x[x$se_engaged == "Yes",]
str(x.se)
x.se
str(x)
str(by.BU)
# Subset MTTR by SE engagement
allData.noSE <- x[allData$se_engaged == "No", ]
allData.SE   <- x[allData$se_engaged == "Yes", ]
by.BU.noSE <- ddply(allData.noSE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE <- ddply(allData.SE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
str(allData.SE)
allData.SE   <- x[allData$se_engaged == "Yes", ]
str(addData.SE)
str(allData.SE)
str(allData)
allData.SE   <- x[allData$se_engaged == "Yes", ]
str(allData.SE)
# Subset MTTR by SE engagement
allData.noSE <- allData[allData$se_engaged == "No", ]
allData.SE   <- allData[allData$se_engaged == "Yes", ]
by.BU.noSE <- ddply(allData.noSE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE <- ddply(allData.SE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
str(by.BU.SE)
by.BU$impact    <- by.BU$N * (by.BU$mean - avg.mttr)
by.BU$goodbad   <- by.BU$impact > 0
d7 <- ggplot(by.BU,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("darkgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to Overall MTTR by BU\nImpact=Issues * (BU.mttr - Overall.mttr)") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d7
# Subset MTTR by SE engagement
allData.noSE <- allData[allData$se_engaged == "No", ]
allData.SE   <- allData[allData$se_engaged == "Yes", ]
by.BU.noSE <- ddply(allData.noSE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE <- ddply(allData.SE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE$impact    <- by.BU.SE$N * (by.BU.SE$mean - avg.mttr.SE)
by.BU.SE$goodbad   <- by.BU.SE$impact > 0
by.BU.noSE$impact  <- by.BU.noSE$N * (by.BU.noSE$mean - avg.mttr.noSE)
by.BU.noSE$goodbad <- by.BU.noSE$impact > 0
avg.mttr.SE   <- sum(x$N[x$se_engaged == "Yes"] * x$mean[x$se_engaged == "Yes"]) /
sum(x$N[x$se_engaged == "Yes"])
avg.mttr.noSE <- sum(x$N[x$se_engaged == "No"] * x$mean[x$se_engaged == "No"]) /
sum(x$N[x$se_engaged == "No"])
avg.mttr      <- sum(x$N * x$mean) / sum(x$N)
# Subset MTTR by SE engagement
allData.noSE <- allData[allData$se_engaged == "No", ]
allData.SE   <- allData[allData$se_engaged == "Yes", ]
by.BU.noSE <- ddply(allData.noSE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE <- ddply(allData.SE, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
by.BU.SE$impact    <- by.BU.SE$N * (by.BU.SE$mean - avg.mttr.SE)
by.BU.SE$goodbad   <- by.BU.SE$impact > 0
by.BU.noSE$impact  <- by.BU.noSE$N * (by.BU.noSE$mean - avg.mttr.noSE)
by.BU.noSE$goodbad <- by.BU.noSE$impact > 0
d8 <- ggplot(by.BU.SE,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU.SE, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU.SE$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("darkgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to SE MTTR by BU\nImpact=Issues * (BU.mttr - SE.mttr)") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d8
source('~/Spectrum-R/Amy/Amy.R')
d7
d8
d9
d9
d9 <- ggplot(by.BU.noSE,aes(x=operational_bu,y=impact, fill=goodbad)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU.noSE, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU.noSE$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
scale_fill_manual(values=c("darkgreen", "#FF3333")) +
geom_hline(yintercept = 0, colour="darkgreen") +
xlab("Product") + ylab("Impact to MTTR") +
ggtitle("Impact to SE MTTR by BU\nImpact=Issues * (BU.mttr - SE.mttr)") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d9
source('~/Spectrum-R/Amy/Amy.R')
multiplot(d7, d8, d9, cols=2)
str(x)
x
by.BU
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
)
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity", colour = "black") +
guides(fill=FALSE) +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
geom_text(data=by.BU, mapping=aes(x=operational_bu, y=10),
size=4, label=format(by.BU$N,digits=2,nsmall=2)) +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
source('~/Spectrum-R/Amy/Amy.R')
multiplot(d6, d7, d8, d9, cols=2)
source('~/Spectrum-R/Amy/Amy.R')
multiplot(d6, d7, d8, d9, cols=2)
multiplot(d6, d8, d7, d9, cols=2)
multiplot(d6, d9, d7, d8, cols=2)
str(allData)
allData <- read.csv("~/Spectrum-R/Amy/allCSU.csv",
header = TRUE, stringsAsFactors = TRUE)
str(allData)
head(allData$age_at_close)
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, hjust = 0.5, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, hjust = 0.7, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, hjust = 0.3, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, vjust = 0.3, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
source('~/Spectrum-R/Amy/Amy.R')
multiplot(d6, d9, d7, d8, cols=2)
source('~/Spectrum-R/Amy/Amy.R')
source('~/Spectrum-R/Jones-Reid/Top5.R')
d7
d7 <- ggplot(data=PIall,aes(x=product,y=impact, fill=goodbad))
d7 <- d7 + geom_bar(position=position_dodge(), stat="identity")
d7 <- d7 + guides(fill=FALSE)
d7 <- d7 + geom_text(data=PIall, mapping=aes(x=product, y=10),
size=2, label=format(PIall$issues,digits=2,nsmall=2))
d7 <- d7 + theme(axis.text.x = element_text(angle=90, vjust= 0.3, colour = "black"))
d7 <- d7 + scale_fill_manual(values=c("lightgreen", "#FF3333"))
d7 <- d7 + geom_hline(yintercept = 0, colour="darkgreen")
d7 <- d7 + xlab("Product") + ylab("Impact to MTTR")
d7 <- d7 + ggtitle("Weighted Impact to Overall MTTR by Product with Number of Issues")
d7 <- d7 + theme(axis.title.y = element_text(size = 10))
d7 <- d7 + theme(axis.title.x = element_text(size = 6))
d7 <- d7 + theme(axis.text.y = element_blank())
d7
d9
d7
source('~/.active-rstudio-document')
source('~/Spectrum-R/Jones-Reid/Top5.R')
d7
d7a
d7b
d9
multiplot(d9,d7a,d7b,d7)
multiplot(d9,d7a,d7b,d7, col = 2)
multiplot(d9,d7a,d7b,d7, cols = 2)
multiplot(d9,d7,d7b,d7a, cols = 2)
# d9 - create MTTR - no SE Chart
d9 <- ggplot() + geom_errorbar(data=PInoSE, aes(x=product,ymin=lower,ymax=upper),
width=0.2, size=.5, color="blue")
d9 <- d9 + scale_y_continuous(limits=c(0,25))
d9 <- d9 + geom_point(data=PInoSE, mapping=aes(x=product, y=mean),
colour="black", size = 3, shape=21, fill="darkred")
d9 <- d9 + geom_text(data=PInoSE, mapping=aes(x=product, y=0),
size=2, label=format(PInoSE$issues,digits=2,nsmall=2))
d9 <- d9 + theme(axis.text.x = element_text(angle=90, size=12,
vjust=0.3,colour="black"),
plot.title = element_text(size = 12, colour = "black"))
d9 <- d9 + xlab("Product") + ylab("Age at Close (days)")
d9 <- d9 + ggtitle("L1 MTTR by Product with Issue Counts")
d9 <- d9 + theme(axis.title.y = element_text(size = 10))
d9 <- d9 + theme(axis.title.x = element_text(size = 6))
multiplot(d9,d7b,d7,d7a, cols = 2)
# read in the data and subset the records where MTTR <= 365
allData <- read.csv("~/Spectrum-R/Amy/allCSU.csv",
header = TRUE, stringsAsFactors = TRUE)
# update eng_region so that R doesn't get confused with the NA
levels(allData$eng_region) <- c(levels(allData$eng_region), "NAM")
allData$eng_region[is.na(allData$eng_region)] <- "NAM"
x <- ddply(allData, c("operational_bu", "queue", "se_engaged", "eng_region"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
levels(allData$operational_bu)
?level
levels(allData$operational_bu) <- c("API Mgmt", "AD", "EM", "ITBM", "MF", "NBI-EC",
"NBI-EM", "SEC")
levels(allData$operational_bu)
str(allData)
head(allData$operational_bu)
head(allData$operational_bu, 25)
head(allData$operational_bu, 100)
avg.mttr.SE   <- sum(x$N[x$se_engaged == "Yes"] * x$mean[x$se_engaged == "Yes"]) /
sum(x$N[x$se_engaged == "Yes"])
avg.mttr.noSE <- sum(x$N[x$se_engaged == "No"] * x$mean[x$se_engaged == "No"]) /
sum(x$N[x$se_engaged == "No"])
avg.mttr      <- sum(x$N * x$mean) / sum(x$N)
by.BU <- ddply(allData, c("operational_bu"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
d6 <- ggplot(by.BU,aes(x=operational_bu,y=mean)) +
geom_bar(position=position_dodge(), stat="identity",
fill="#FF9999", colour="black") +
theme(axis.text.x = element_text(angle=90, vjust = 0.3, colour = "black")) +
ylab("Overall MTTR") +
ggtitle("Overall MTTR by BU") +
theme(axis.title.y = element_text(size = 10)) +
theme(axis.title.x = element_blank())
d6
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mean = mean(age_at_close))
library(plyr)
library(psych)
library(ggplot2)
library(Rmisc)
library(qcc)
topfactor= function(fac, n = 10, o = "other") {
x <- as.character(fac)
x[ !(x %in% names(sort(summary(fac), decreasing = TRUE))[1 : n]) ] <- o
as.factor(x)
}
# read in the data and subset the records where MTTR <= 365
allData <- read.csv("~/Spectrum-R/Amy/allCSU.csv",
header = TRUE, stringsAsFactors = TRUE)
# update eng_region so that R doesn't get confused with the NA
levels(allData$eng_region) <- c(levels(allData$eng_region), "NAM")
allData$eng_region[is.na(allData$eng_region)] <- "NAM"
levels(allData$operational_bu) <- c("API Mgmt", "AD", "EM", "ITBM",
"MF", "NBI-EC", "NBI-EM", "SEC")
x <- ddply(allData, c("operational_bu", "queue", "se_engaged", "eng_region"), summarize,
N = length(age_at_close),
mean = mean(age_at_close))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
str(allData)
install.packages("ISOweek")
library(ISOweek)
allData$close_date[3]
as.date(allData$close_date[3])
date(allData$close_date[3])
?date
?as
as.Date(allData$close_date[3])
allData$close_date<-as.Date(allData$close_date, "%m/%d/%Y")
as.Date(allData$close_date[3])
allData$close_date[3]
date2ISOweek(allData$close_date[3])
date2ISOweek(allData$close_date[4])
date2ISOweek(allData$close_date[5])
allData$close_date[5]
xv <- date2ISOweek(allData$close_date[5])
str(xv)
allData$close_week <- date2ISOweek(allData$close_date)
allData$closed_week[5]
llData$close_week <- factor(date2ISOweek(allData$close_date))
allData$close_week <- factor(date2ISOweek(allData$close_date))
allData$closed_week[5]
xv <- factor(date2ISOweek(allData$close_date))
head(xv)
allData$close_week[5]
str(allData)
x <- ddply(allData, c("operational_bu", "overall_customer_sat"), summarize,
N = sum(!is.na(overall_customer_sat)),
mean = mean(age_at_close, na.rm = TRUE))
x
head(x)
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(MASS)
library(corrplot)
pml.training <- read.csv("~/Spectrum-R/Coursera/MachineLearning/pml-training.csv",
header = TRUE, stringsAsFactors = TRUE)
pml.training <- pml.training[ , c(8:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160)]
dim(pml.training)
tr.index <- createDataPartition(y = pml.training$classe, p = 0.80, list = FALSE)
training <- pml.training[ tr.index, ]
testing  <- pml.training[ -tr.index, ]
nearZeroVar(training, saveMetrics= FALSE)
set.seed(1)
M <- cor(training[ , -length(training)])
corrplot(M, order = "original", tl.pos = "n")
hCor <- findCorrelation(M, 0.80)
training <- training[, -hCor]
testing  <- testing[, -hCor]
dim(training)[2]
set.seed(8181)
preProc <- preProcess(training[, -length(training)], method = "pca")
trainPC <- predict(preProc, training[, -length(training)])
dim(trainPC)[2]
set.seed(8181)
rp1 <- train(training$classe ~ ., data = trainPC, method="rpart")
rp1$results[1,2]
set.seed(8181)
rp2 <- train(training$classe ~ ., data=trainPC, method="knn")
rp2$results[1,2]
rp2$results[1,2]
testPC <- predict(preProc, testing[, -length(testing)])
cf <- confusionMatrix(testing$classe,predict(rp2, newdata = testPC))
cf
summary(cf)
str(cf)
cf$overall
cf$overall[1]
pml.testing  <- read.csv("~/Spectrum-R/Coursera/MachineLearning/pml-testing.csv",
header = TRUE, stringsAsFactors = TRUE)
pml.testing  <- pml.testing[ ,  c(8:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160)]
pml.testing  <- pml.testing[, -hCor]
tPC <- predict(preProc, pml.testing[, -length(pml.testing)])
result.set <- predict(rp2$finalModel, tPC, type = "class")
result.set
tPC <- predict(preProc, pml.testing[, -length(pml.testing)])
result.set <- predict(rp2$finalModel, tPC, type = "class")
result.set
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
answer <- result.set
answer
setwd("~/Spectrum-R/Coursera/MachineLearning/Ansers")
pml_write_files(answer)
